{"version":3,"sources":["styleVariables.js","mountEffect.js","components/Sidebar/Sidebar.js","helpers.js","components/Sidebar/SidebarItem.js","components/AppProvider/AppProvider.js","utils/index.js","actions/types.js","actions/auth.js","components/Header/Header.js","actions/vote.js","components/Candidate/Candidate.js","components/Workspace/Workspace.js","components/Wrapper/Wrapper.js","components/Alerts/Alerts.js","pages/Home/Home.js","pages/Authentication/Signin.js","pages/AddCandidate/AddCandidate.js","components/Cards/ProfileCard.js","components/Cards/StatCard.js","actions/results.js","actions/statistics.js","pages/Errors/NotFound.js","actions/errors.js","actions/parties.js","actions/candidates.js","pages/AddParty/AddParty.js","pages/ListCandidates/ListCandidates.js","pages/AddVoter/AddVoter.js","pages/ListParties/ListParties.js","actions/voters.js","pages/ListVoters/ListVoters.js","pages/Vote/Vote.js","pages/Vote/CheckVoter.js","pages/Results/Results.js","routes.js","containers/Dashboard.js","registerServiceWorker.js","reducers/parties.js","reducers/errors.js","reducers/success.js","reducers/auth.js","reducers/candidates.js","reducers/voters.js","reducers/results.js","reducers/vote.js","reducers/statistics.js","reducers/index.js","store.js","components/common/PrivateRoute.js","index.js"],"names":["lightBlue","require","yellow","drawerWidth","default","MobileBreakpoint","useMountEffect","fun","useEffect","iOS","process","browser","test","navigator","userAgent","useStyles","makeStyles","theme","drawerPaper","position","width","maxWidth","height","zIndex","drawer","modal","breakpoints","down","top","up","backdrop","Sidebar","opened","toggleDrawer","routes","location","classes","useState","undefined","activeRoute","setActiveRoute","toggleMenu","index","menu","component","map","route","isCurrentPath","pathname","indexOf","path","key","currentPath","smDown","variant","paper","open","ModalProps","keepMounted","className","BackdropProps","onBackdropClick","mdUp","onClose","onOpen","disableBackdropTransition","prototypes","PropTypes","func","closeDrawer","openDrawer","object","SidebarWithRouter","withRouter","withWidth","capitalize","string","charAt","toUpperCase","slice","badge","display","flexWrap","fontSize","alignItems","borderRadius","alignContent","flexDirection","justifyContent","menuLink","menuItem","paddingLeft","paddingRight","paddingTop","spacing","paddingBottom","menuIcon","marginLeft","marginRight","menuSubItem","menuCollapsed","backgroundColor","palette","action","hover","menuActive","menuClosed","caret","minWidth","primary","main","color","contrastText","secondary","error","SidebarItem","badgeClassName","classNames","type","Typography","value","href","target","rel","ListItem","button","ListItemIcon","icon","name","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","children","subitem","to","exact","activeClassName","number","jss","create","plugins","jssPreset","rtl","Context","createContext","Provider","reducer","state","direction","AppProvider","prefersDarkMode","useMediaQuery","useReducer","dispatch","createMuiTheme","indigo","red","typography","headline","subtitle1","fontWeight","textTransform","body1","shape","document","body","dir","ThemeProvider","StylesProvider","axiosCall","a","payload","method","contentType","url","headers","localStorage","token","axiosdata","data","json","axios","result","response","message","window","clear","console","log","setErrors","err","status","CLEAN_UP","LOADING","cleanUpAuth","appBar","boxShadow","toolBar","branding","overflow","textOverflow","whiteSpace","margin","lineHeight","padding","logo","searchWrapper","flex","boxSizing","searchForm","background","searchInput","searchIcon","left","marginTop","Header","logoAltText","toggleFullscreen","props","toogleNotifications","anchorEl","setAnchorEl","searchExpanded","setSearchExpanded","handleCloseMenu","handleSearchExpandToggle","auth","isAuthenticated","AppBar","Toolbar","IconButton","aria-label","src","alt","Hidden","xsDown","smUp","aria-expanded","aria-owns","aria-haspopup","event","currentTarget","Menu","id","Boolean","MenuItem","ListItemText","logout","placeholder","autoFocus","connect","cleanUp","inputs","card","textAlign","cursor","marginBottom","title","letterSpacing","subheader","price","symbol","verticalAlign","period","opacity","feature","description","text","fontFamily","inactive","centered","avatar","Candidate","image","votersId","success","vote","candidatesId","castVote","values","Card","Grid","container","justify","item","Avatar","onSubmit","e","preventDefault","gutterBottom","Input","CardActions","actions","disableSpacing","Button","subtitle","errors","cleanUp_","content","overflowY","overflowX","transitions","easing","sharp","duration","leavingScreen","contentShift","transition","easeOut","enteringScreen","Workspace","node","isRequired","bool","root","Wrapper","defaultProps","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","statistics","MySnackbarContentWrapper","withStyles","green","dark","amber","iconVariant","other","Icon","SnackbarContent","aria-describedby","close","setState","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ProfileCard","progress","CardContent","LinearProgress","Divider","iconFloat","right","transform","lightText","StatCard","before","after","cardIcon","style","getResults","imgStyle","candidate","new_","results","stats","getStats","isLoading","loaded","votes","Object","keys","push","i","length","split","xs","sm","md","voters","candidates","parties","Paper","Table","TableHead","TableRow","TableCell","TableBody","n","scope","session","minHeight","border","pointerEvents","borderColor","borderTopColor","borderWidth","NotFound","wrapper","fullWidth","login","email","password","setValues","alert","setAlert","onChange","persist","prevState","history","Array","isArray","text_","setTimeout","TextField","label","required","textField","CircularProgress","size","getParties","addParty","party","partyData","FormData","append","getCandidates","addCandidate","candidateData","propTypes","margin_","shadows","pictureFile","files","display_picture","FormControl","InputLabel","htmlFor","startAdornment","InputAdornment","Select","allParties","rows","accept","data-max-size","updateCanditate","updateData","deleteCandidate","columns","field","allCandidates","options","exportButton","editable","onRowUpdate","newData","oldData","Promise","resolve","onRowDelete","splice","bio","established","updateParty","deleteParty","addVoter","voter","InputLabelProps","shrink","getVoters","updateVoter","deleteVoter","allVoters","count","candidateScore","pricingTable","font","candidatesShow","foundVoter","first_name","last_name","voter_id","checkVoter","items","ViewColumnIcon","Home","AppsIcon","AddParty","ListParties","PersonIcon","AddCandidate","ListCandidates","FaceIcon","AddVoter","ListVoters","EqualizerIcon","Results","BookmarkIcon","panel","speedDial","bottom","Dashboard","useContext","setOpened","notificationsOpen","setNotificationsOpen","openSpeedDial","setOpenSpeedDial","mediaMatcher","matchMedia","handleDrawerToggle","Event","dispatchEvent","evt","createEvent","initUIEvent","resizeDispatch","handleSpeedDialOpen","handleSpeedDialClose","getRoutes","subItem","matches","addListener","match","unlisten","listen","querySelector","scrollTop","removeListener","element","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","SpeedDial","ariaLabel","SpeedDialIcon","onBlur","onFocus","onMouseEnter","onMouseLeave","SpeedDialAction","tooltipTitle","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","getItem","combineReducers","user","setItem","JSON","stringify","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Component","rest","render","getState","basename","Signin","Vote","CheckVoter","getElementById","URL","origin","addEventListener","fetch","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f9694e03.chunk.js","sourcesContent":["const lightBlue = require('@material-ui/core/colors/lightBlue');\nconst yellow = require('@material-ui/core/colors/yellow');\n\n// Colors\nconst infoColor = lightBlue.default[500];\nconst warningColor = yellow.default[500];\n\n// Spacing\nconst drawerWidth = 240;\nconst notificationCenterWidth = 300;\nconst MobileBreakpoint = 960;\n\nexport {\n  infoColor,\n  warningColor,\n  drawerWidth,\n  notificationCenterWidth,\n  MobileBreakpoint\n};\n","import { useEffect } from 'react';\n\nconst useMountEffect = fun => useEffect(fun, []);\n\nexport default useMountEffect;\n","import React, { useState } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport PropTypes from 'prop-types';\nimport SidebarItem from './SidebarItem';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { drawerWidth } from '../../styleVariables';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport withWidth from '@material-ui/core/withWidth';\n\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n    maxWidth: drawerWidth,\n    height: '100%',\n    zIndex: theme.zIndex.drawer + 99\n  },\n  modal: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px!important'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px!important'\n    },\n    zIndex: '1000!important'\n  },\n  backdrop: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    }\n  }\n}));\n\nconst Sidebar = ({ opened, toggleDrawer, routes, location }) => {\n  const classes = useStyles();\n  const [activeRoute, setActiveRoute] = useState(undefined);\n  const toggleMenu = index =>\n    setActiveRoute(activeRoute === index ? undefined : index);\n\n  const menu = (\n    <List component=\"div\">\n      {routes.map((route, index) => {\n        const isCurrentPath =\n          location.pathname.indexOf(route.path) > -1 ? true : false;\n        return (\n          <SidebarItem\n            key={index}\n            index={index}\n            route={route}\n            activeRoute={activeRoute}\n            toggleMenu={toggleMenu}\n            currentPath={isCurrentPath}\n          />\n        );\n      })}\n    </List>\n  );\n\n  return (\n    <>\n      <Hidden smDown>\n        <Drawer\n          variant=\"persistent\"\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          open={opened}\n          ModalProps={{\n            keepMounted: false,\n            className: classes.modal,\n            BackdropProps: {\n              className: classes.backdrop\n            },\n            onBackdropClick: toggleDrawer\n          }}\n        >\n          {menu}\n        </Drawer>\n      </Hidden>\n      <Hidden mdUp>\n        <SwipeableDrawer\n          variant=\"temporary\"\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          open={opened}\n          onClose={toggleDrawer}\n          onOpen={toggleDrawer}\n          disableBackdropTransition={!iOS}\n          ModalProps={{\n            keepMounted: false,\n            className: classes.modal,\n            BackdropProps: {\n              className: classes.backdrop\n            },\n            onBackdropClick: toggleDrawer\n          }}\n        >\n          {menu}\n        </SwipeableDrawer>\n      </Hidden>\n    </>\n  );\n};\n\nSidebar.prototypes = {\n  opened: PropTypes.func,\n  toggleDrawer: PropTypes.func,\n  closeDrawer: PropTypes.func,\n  openDrawer: PropTypes.func,\n  routes: PropTypes.object\n};\n\nconst SidebarWithRouter = withRouter(Sidebar);\n\nexport default withWidth()(SidebarWithRouter);\n","// Capitalize\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { capitalize } from '../../helpers';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMountEffect from '../../mountEffect';\n\nconst useStyles = makeStyles(theme => ({\n  badge: {\n    width: '20px',\n    height: '20px',\n    display: 'flex',\n    zIndex: 1,\n    flexWrap: 'wrap',\n    fontSize: '0.75rem',\n    alignItems: 'center',\n    borderRadius: '50%',\n    alignContent: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  menuLink: {\n    position: 'relative',\n    display: 'block'\n  },\n  menuItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuIcon: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2\n  },\n  menuSubItem: {\n    paddingLeft: '55px',\n    paddingRight: '55px',\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuCollapsed: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuActive: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuClosed: {\n    backgroundColor: 'transparent'\n  },\n  caret: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2,\n    minWidth: 0\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  }\n}));\n\nconst SidebarItem = ({\n  route,\n  index,\n  activeRoute,\n  toggleMenu,\n  currentPath\n}) => {\n  const classes = useStyles();\n\n  useMountEffect(() => {\n    if (!currentPath || activeRoute === index || route.path === '/') return;\n    toggleMenu(index);\n  });\n\n  const badge = badge => {\n    if (!badge) return;\n    const badgeClassName = classNames(classes.badge, {\n      [classes[`${badge.type}`]]: badge.type !== 'default'\n    });\n    return (\n      <Typography\n        className={classNames(classes.badge, badgeClassName)}\n        component=\"div\"\n      >\n        {badge.value}\n      </Typography>\n    );\n  };\n\n  if (route.type === 'external') {\n    return (\n      <a\n        href={route.path}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        key={index}\n        className={classes.menuLink}\n      >\n        <ListItem className={classes.menuItem} button>\n          <ListItemIcon>\n            <route.icon className={classes.menuIcon} />\n          </ListItemIcon>\n          <Typography variant=\"body1\" className=\"flexSpacer\">\n            {capitalize(route.name)}\n          </Typography>\n          {badge(route.badge)}\n        </ListItem>\n      </a>\n    );\n  }\n\n  if (route.type === 'submenu') {\n    return (\n      <div\n        className={\n          activeRoute === index ? classes.menuCollapsed : classes.menuClosed\n        }\n      >\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={index}\n          onClick={() => toggleMenu(index)}\n        >\n          <ListItemIcon>\n            <route.icon className={classes.menuIcon} />\n          </ListItemIcon>\n          <Typography variant=\"body1\" className=\"flexSpacer\">\n            {capitalize(route.name)}\n          </Typography>\n          {badge(route.badge)}\n          <ListItemIcon className={classes.caret}>\n            {activeRoute === index ? (\n              <ArrowDropUpIcon />\n            ) : (\n              <ArrowDropDownIcon />\n            )}\n          </ListItemIcon>\n        </ListItem>\n        <Collapse\n          in={activeRoute === index ? true : false}\n          timeout=\"auto\"\n          unmountOnExit\n        >\n          <List disablePadding>\n            {route.children.map((subitem, index) => (\n              <NavLink\n                to={`${route.path ? route.path : ''}${\n                  subitem.path ? subitem.path : ''\n                }`}\n                exact\n                className={classes.menuLink}\n                activeClassName={classes.menuActive}\n                key={index}\n              >\n                <ListItem className={classes.menuSubItem} button>\n                  <Typography variant=\"body1\" className=\"flexSpacer\">\n                    {capitalize(subitem.name)}\n                  </Typography>\n                  {badge(subitem.badge)}\n                </ListItem>\n              </NavLink>\n            ))}\n          </List>\n        </Collapse>\n      </div>\n    );\n  }\n\n  return (\n    <NavLink\n      to={route.path}\n      exact\n      className={classes.menuLink}\n      activeClassName={classes.menuActive}\n      key={index}\n    >\n      <ListItem\n        className={classes.menuItem}\n        button\n        onClick={() => toggleMenu(index)}\n      >\n        <ListItemIcon>\n          <route.icon className={classes.menuIcon} />\n        </ListItemIcon>\n        <Typography variant=\"body1\" className=\"flexSpacer\">\n          {capitalize(route.name)}\n        </Typography>\n        {badge(route.badge)}\n      </ListItem>\n    </NavLink>\n  );\n};\n\nSidebarItem.prototypes = {\n  route: PropTypes.object,\n  index: PropTypes.number,\n  activeRoute: PropTypes.number,\n  toggleMenu: PropTypes.func\n};\n\nexport default SidebarItem;\n","import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { StylesProvider, jssPreset } from '@material-ui/styles';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { create } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport rtl from 'jss-rtl';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Context = createContext();\nconst { Provider } = Context;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'direction':\n      const newState = {\n        ...state,\n        direction: state.direction === 'ltr' ? 'rtl' : 'ltr'\n      };\n      return newState;\n    case 'type':\n      return { ...state, type: state.type === 'light' ? 'dark' : 'light' };\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = ({ children }) => {\n  const prefersDarkMode = useMediaQuery('@media (prefers-color-scheme: dark)');\n  const [state, dispatch] = useReducer(reducer, {\n    type: prefersDarkMode ? 'dark' : 'light',\n    direction: 'ltr'\n  });\n\n  const theme = createMuiTheme({\n    direction: state.direction,\n    palette: {\n      type: state.type,\n      primary: indigo,\n      secondary: red,\n      error: red\n    },\n    typography: {\n      headline: {\n        fontSize: '1rem'\n      },\n      subtitle1: {\n        fontSize: '0.8125rem'\n      },\n      button: {\n        fontWeight: 400,\n        textTransform: 'initial'\n      },\n      body1: {\n        fontSize: '0.875rem'\n      }\n    },\n    shape: {\n      borderRadius: 4\n    }\n  });\n\n  useEffect(() => {\n    document.body.dir = state.direction;\n  }, [state.direction]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StylesProvider jss={jss}>\n        <Provider value={[state, dispatch]}>{children}</Provider>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default AppProvider;\nexport const useAppState = () => useContext(Context);\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const axiosCall = async ({\r\n    path, payload, method, contentType\r\n  }) => {\r\n    const url = `${process.env.REACT_APP_API_URL}${path}`;\r\n    const headers = {\r\n      'x-access-token': localStorage.token,\r\n      'Content-Type': contentType || 'application/json',\r\n    };\r\n    const axiosdata = {\r\n      method,\r\n      url,\r\n      data: payload,\r\n      headers,\r\n      json: true,\r\n    };\r\n  \r\n    try {\r\n      const result = await axios(axiosdata);\r\n      const data = result && result.data;\r\n      return data;\r\n    } catch (error) {\r\n      const { response } = error;\r\n      if(response.data.message === \"Unauthorized\")  {\r\n        window.location.href = `/signin`;\r\n        localStorage.clear()\r\n      }\r\n      if (response.data.message) {\r\n          console.log('the util axios error', response.data)\r\n        return;\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  export const setErrors = (err) => {\r\n    const errors = {\r\n        message: err.response ? err.response.data : 'Server Connection Error',\r\n        status: err.response ? err.response.status : '503',\r\n    };\r\n    return {\r\n        type: 'GET_ERRORS',\r\n        payload: errors,\r\n    };\r\n};","// PARTIES\r\nexport const GET_PARTIES = 'GET_PARTIES';\r\nexport const UPDATE_PARTY = 'UPDATE_PARTY';\r\nexport const DELETE_PARTY = 'DELETE_PARTY';\r\nexport const ADD_PARTY = 'ADD_PARTY';\r\n\r\n// CANDIDATES\r\nexport const GET_CANDIDATES = 'GET_CANDIDATES';\r\nexport const UPDATE_CANDITATE = 'UPDATE_CANDITATE';\r\nexport const DELETE_CANDIDATE = 'DELETE_CANDIDATE';\r\nexport const ADD_CANDIDATE = 'ADD_CANDIDATE';\r\n\r\n// VOTERS\r\nexport const GET_VOTERS = 'GET_VOTERS';\r\nexport const UPDATE_VOTER = 'UPDATE_VOTER';\r\nexport const DELETE_VOTER = 'DELETE_VOTER';\r\nexport const ADD_VOTER = 'ADD_VOTER';\r\n\r\n// RESULTS\r\nexport const GET_RESULTS = 'GET_RESULTS';\r\n\r\n// GET STATS\r\nexport const GET_STATS = 'GET_STATS'\r\n\r\n// CAST VOTE\r\nexport const CAST_VOTE = 'CAST_VOTE';\r\n\r\n// CHECK VOTER\r\nexport const CHECK_VOTER = 'CHECK_VOTER';\r\nexport const FOUND_VOTER = 'FOUND_VOTER';\r\n\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const CLEAN_UP_AUTH = 'CLEAN_UP_AUTH';\r\n\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_SUCCESS = 'GET_SUCCESS';\r\nexport const CLEAN_UP = 'CLEAN_UP';\r\nexport const LOADING = 'LOADING';\r\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_SUCCESS,\r\n    CLEAN_UP_AUTH,\r\n    USER_LOADING,\r\n    LOGIN_FAIL\r\n} from './types';\r\n\r\nexport const cleanUpAuth = () => ({\r\n    type: CLEAN_UP_AUTH,\r\n});\r\n\r\n// LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    console.log('the state', getState())\r\n    const token = getState().auth.token;\r\n    // If token, add to headers congig\r\n    if (token) {\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: getState().auth.user,\r\n        });\r\n    } else {\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n        });\r\n    }\r\n};\r\n\r\n// LOGIN\r\nexport const login = (values) => async (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOADING\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/users/signin', payload: values, method: 'post' });\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n      }\r\n};\r\n\r\n// LOG OUT\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        await axiosCall({ path: '/api/v1/users/signout', payload: null, method: 'post' });\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { logout, cleanUpAuth } from '../../actions/auth';\nimport PersonIcon from '@material-ui/icons/Person';\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        boxShadow: '0 1px 8px rgba(0,0,0,.3)',\n        position: 'relative',\n        zIndex: theme.zIndex.drawer + 100,\n        [theme.breakpoints.down('sm')]: {\n            position: 'fixed',\n        },\n    },\n    toolBar: {\n        paddingLeft: theme.spacing(1) / 2,\n        paddingRight: theme.spacing(1) / 2,\n    },\n    branding: {\n        display: 'flex',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        margin: 'auto 0',\n        lineHeight: '50px',\n        padding: `0 64px 0 0`,\n    },\n    logo: {\n        margin: 'auto',\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '80px',\n        },\n    },\n    searchWrapper: {\n        flex: '1 1 0%',\n        boxSizing: ' border-box',\n    },\n    searchForm: {\n        background: 'white',\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        marginRight: theme.spacing(1) * 2,\n        display: 'block',\n        maxWidth: '800px',\n    },\n    searchInput: {\n        fontSize: '1rem',\n        padding: theme.spacing(1) * 1.9,\n        [theme.breakpoints.down('xs')]: {\n            padding: theme.spacing(1) * 1.2,\n        },\n        cursor: 'text',\n        textIndent: '30px',\n        border: 'none',\n        background: 'transparent',\n        width: '100%',\n        outline: '0',\n    },\n    searchIcon: {\n        position: 'absolute',\n        top: '50%',\n        left: '0',\n        marginTop: '-24px',\n        color: 'rgba(0,0,0,.87)',\n    },\n}));\n\nconst Header = ({\n    logo,\n    logoAltText,\n    toggleFullscreen,\n    toggleDrawer,\n    toogleNotifications,\n    ...props\n}) => {\n    console.log('the props', props);\n    const takeout = () => {\n        props.logout();\n        props.cleanUpAuth();\n        console.log('cleaning up auth');\n    };\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [searchExpanded, setSearchExpanded] = useState(false);\n\n    const handleSettingdToggle = (event) => setAnchorEl(event.currentTarget);\n\n    const handleCloseMenu = () => setAnchorEl(null);\n\n    const handleSearchExpandToggle = () => setSearchExpanded(!searchExpanded);\n\n    const handleDrawerToggle = () => {\n        toggleDrawer();\n        if (searchExpanded) handleSearchExpandToggle();\n    };\n\n    const handleNotificationToggle = () => {\n        toogleNotifications();\n        if (searchExpanded) handleSearchExpandToggle();\n    };\n    if (!props.auth.isAuthenticated) {\n        return <Redirect to=\"/signin\" />;\n    }\n    return (\n        <AppBar position=\"static\" className={classes.appBar}>\n            <Toolbar className={classes.toolBar}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerToggle}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <div className={classes.branding}>\n                    <img\n                        src={logo}\n                        alt={logoAltText}\n                        className={classes.logo}\n                    />\n                </div>\n\n                <Hidden xsDown>\n                    <div className={classes.searchWrapper}>\n                        {/* <form className={classes.searchForm}>\n                            <IconButton\n                                aria-label=\"Search\"\n                                className={classes.searchIcon}\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                            <input\n                                className={classes.searchInput}\n                                type=\"text\"\n                                placeholder=\"Search\"\n                                autoFocus={true}\n                            />\n                        </form> */}\n                    </div>\n                </Hidden>\n\n                <Hidden smUp>\n                    <span className=\"flexSpacer\" />\n                </Hidden>\n\n                <Hidden smUp>\n                    <IconButton\n                        color=\"inherit\"\n                        onClick={handleSearchExpandToggle}\n                        aria-expanded={searchExpanded}\n                        aria-label=\"Show searchbar\"\n                    >\n                        <SearchIcon />\n                    </IconButton>\n                </Hidden>\n\n                <Hidden xsDown>\n                    <IconButton color=\"inherit\" onClick={toggleFullscreen}>\n                        <FullscreenIcon />\n                    </IconButton>\n                </Hidden>\n\n                {/* <IconButton color=\"inherit\" onClick={handleNotificationToggle}>\n                    <Badge badgeContent={5} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton> */}\n\n                <IconButton\n                    aria-label=\"User Settings\"\n                    aria-owns={anchorEl ? 'user-menu' : null}\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    onClick={handleSettingdToggle}\n                >\n                    <PersonIcon />\n                </IconButton>\n\n                <Menu\n                    id=\"user-menu\"\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={handleCloseMenu}\n                >\n                    {/* <MenuItem onClick={handleCloseMenu}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Settings\" />\n                    </MenuItem>\n                    <MenuItem onClick={handleCloseMenu}>\n                        <ListItemIcon>\n                            <AccountBoxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Profile\" />\n                    </MenuItem>\n                    <MenuItem onClick={handleCloseMenu}>\n                        <ListItemIcon>\n                            <NotificationsOffIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Disable notifications\" />\n                    </MenuItem> */}\n                    <MenuItem onClick={handleCloseMenu}>\n                        <ListItemIcon>\n                            <ExitToAppIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            onClick={takeout}\n                            primary=\"Sign out Now\"\n                        />\n                    </MenuItem>\n                </Menu>\n            </Toolbar>\n            <Hidden smUp>\n                <Collapse in={searchExpanded} timeout=\"auto\" unmountOnExit>\n                    <Toolbar className={classes.toolBar}>\n                        <div className={classes.searchWrapper}>\n                            <form\n                                className={classNames(\n                                    classes.searchForm,\n                                    'mr-0'\n                                )}\n                            >\n                                <IconButton\n                                    aria-label=\"Search\"\n                                    className={classes.searchIcon}\n                                >\n                                    <SearchIcon />\n                                </IconButton>\n                                <input\n                                    className={classes.searchInput}\n                                    type=\"text\"\n                                    placeholder=\"Search\"\n                                    autoFocus=\"true\"\n                                />\n                            </form>\n                        </div>\n                    </Toolbar>\n                </Collapse>\n            </Hidden>\n        </AppBar>\n    );\n};\n\nHeader.prototypes = {\n    logo: PropTypes.string,\n    logoAltText: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout, cleanUpAuth })(Header);\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    CAST_VOTE,\r\n    CLEAN_UP,\r\n    LOADING,\r\n    CHECK_VOTER,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n\r\n\r\nexport const checkVoter = (votersId) => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/vote/check-voter', payload: votersId, method: 'post'});\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: CHECK_VOTER,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n    };\r\n\r\nexport const castVote = (vote) => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/vote', payload: vote, method: 'post'});\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: CAST_VOTE,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n    };\r\n","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport { castVote, cleanUp } from '../../actions/vote';\nimport { connect } from 'react-redux';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles((theme) => ({\n    inputs:{\n        display: 'none'\n    },\n    card: {\n        textAlign: 'center',\n        cursor: 'default',\n        marginBottom: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    title: {\n        fontSize: '1rem',\n        overflow: 'hidden',\n        marginBottom: theme.spacing(1),\n        whiteSpace: 'nowrap',\n        letterSpacing: '.01rem',\n        textOverflow: 'ellipsis',\n    },\n    subheader: {\n        textTransform: 'capitalize',\n        fontSize: '12px',\n    },\n    price: {\n        fontSize: '2.5rem',\n        fontWeight: 900,\n        position: 'relative',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n    },\n    symbol: {\n        fontSize: '1rem',\n        verticalAlign: 'super',\n    },\n    period: {\n        fontSize: '0.8125rem',\n        display: 'inline-block',\n        padding: 0,\n        opacity: '.7',\n    },\n    feature: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n    },\n    description: {\n        fontSize: '14px',\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n        fontFamily: theme.typography.fontFamily,\n        lineHeight: 1,\n    },\n    inactive: {\n        color: theme.palette.text.secondary,\n    },\n    centered: {\n        margin: '0 auto',\n    },\n    avatar: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 105,\n        marginBottom: theme.spacing(1) * 2,\n    },\n}));\n\nconst Candidate = ({\n    name,\n    image,\n    success,\n    error,\n    vote,\n    votersId,\n    candidatesId,\n    castVote\n}) => {\n    const values = {\n        votersId,\n        candidatesId,\n    };\n    const submit = (e) => {\n        e.preventDefault();\n        console.log('the values', values);\n        castVote(values);\n    };\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <Grid\n                container\n                spacing={0}\n                alignItems={'center'}\n                direction={'row'}\n                justify={'space-around'}\n                className={classes.spacing}\n            >\n                <Grid item>\n                    <Avatar alt={name} src={image} className={classes.avatar} />\n                </Grid>\n            </Grid>\n            <form onSubmit={submit}>\n                <Typography variant=\"h6\" gutterBottom>\n                    {name}\n                </Typography>\n                <Input\n                    id=\"candidateId\"\n                    name=\"candidateId\"\n                    className={classes.inputs}\n                    value={candidatesId}\n                />\n                <Input id=\"votersId\" name=\"votersId\" className={classes.inputs} value={votersId} />\n                <CardActions className={classes.actions} disableSpacing>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.centered}\n                    >\n                        Vote\n                    </Button>\n                </CardActions>\n            </form>\n        </Card>\n    );\n};\n\nCandidate.prototypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    price: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => ({\n    error: state.errors,\n    success: state.success,\n    vote: state.vote,\n});\nexport const cleanUp_ = () => cleanUp();\n\nexport default connect(mapStateToProps, { castVote, cleanUp_ })(Candidate);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { drawerWidth } from '../../styleVariables';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: theme.palette.background.default,\n    minWidth: 0,\n    width: '100%',\n    position: 'relative',\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    '-webkit-overflow-scrolling': 'touch'\n  },\n  'content-left': {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: -drawerWidth\n    }\n  },\n  'content-right': {\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  'contentShift-left': {\n    marginLeft: 0\n  },\n  'contentShift-right': {\n    marginRight: 0\n  }\n}));\n\nconst Workspace = ({ children, opened }) => {\n  const classes = useStyles();\n  return (\n    <main\n      className={classNames(classes.content, classes[`content-left`], {\n        [classes.contentShift]: opened,\n        [classes[`contentShift-left`]]: opened\n      })}\n    >\n      {children}\n    </main>\n  );\n};\n\nWorkspace.prototypes = {\n  children: PropTypes.node.isRequired,\n  opened: PropTypes.bool\n};\n\nexport default Workspace;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst Wrapper = ({ children, padding }) => {\n  const classes = useStyles();\n  return <div className={padding ? classes.root : null}>{children}</div>;\n};\n\nWrapper.prototypes = {\n  children: PropTypes.node.isRequired,\n  padding: PropTypes.bool\n};\n\nWrapper.defaultProps = {\n  padding: true\n};\n\nexport default Wrapper;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.string\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nconst styles2 = theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst Alerts = ({text, type, open, position}) => {\r\n  const [state, setState] = useState({\r\n    open: open || false,\r\n  });\r\n  text = text === undefined ? \"Info\": text;\r\n  type = type === undefined ? \"info\": type;\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setState({ open: false });\r\n  };\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: position,\r\n          }}\r\n          open={state.open}\r\n          autoHideDuration={2000}\r\n          onClose={handleClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={handleClose}\r\n            variant= {type}\r\n            message={text}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default withStyles(styles2)(Alerts);\r\n","import { StatCard, Wrapper } from '../../components';\nimport React, { useState, useEffect } from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Paper from '@material-ui/core/Paper';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { connect } from 'react-redux';\nimport { getResults, cleanUp } from '../../actions/results';\nimport { getStats } from '../../actions/statistics';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst imgStyle = {\n    width: 60,\n    height: 60,\n};\nlet candidate = {};\nlet name = [];\nlet new_ = [];\nlet statistics;\n\nconst Home = (props) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = () => setAnchorEl(null);\n    const { results, stats } = props;\n    console.log('the props', props);\n    useEffect(() => {\n        props.getResults();\n        props.getStats();\n        return () => {\n            props.cleanUp_();\n        };\n    }, []);\n    candidate = {};\n    if (results && results.isLoading === false && results.loaded === true) {\n        candidate = results && results.results.votes;\n        if (candidate) {\n            name = [];\n            Object.keys(candidate).map((key) => {\n                name.push(key + ',' + candidate[key]);\n            });\n        }\n        new_ = [];\n        for (let i = 0; i < name.length; i++) {\n            new_.push(name[i].split(/[\\s,]+/));\n        }\n    }\n    if (stats && stats.isLoading === false && stats.loaded === true)\n        statistics = stats.stats.stats;\n    if (statistics) console.log('the statis', statistics);\n    if (new_) console.log('the new', new_);\n    return (\n        <Wrapper>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={6} md={3}>\n                    <StatCard\n                        type=\"fill\"\n                        title=\"Voters\"\n                        value={statistics ? statistics.voters : 0}\n                        icon={<PeopleAltIcon />}\n                        color=\"#3f51b5\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <StatCard\n                        type=\"fill\"\n                        title=\"Candidates\"\n                        value={statistics ? statistics.candidates : 0}\n                        icon={<PersonIcon />}\n                        color=\"#9c27b0\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <StatCard\n                        type=\"fill\"\n                        title=\"Parties\"\n                        value={statistics ? statistics.parties : 0}\n                        icon={<HomeWorkIcon />}\n                        color=\"#f44336\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <StatCard\n                        type=\"fill\"\n                        title=\"Votes\"\n                        value={statistics ? statistics.votes : 0}\n                        icon={<CheckBoxIcon />}\n                        color=\"#eaa219\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <Paper className=\"table-responsive\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Image</TableCell>\n                                    <TableCell>Candidate</TableCell>\n                                    <TableCell>Votes</TableCell>\n                                    <TableCell>Percentage</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {new_\n                                    ? new_.map((n) => (\n                                          <TableRow key={n[3]}>\n                                              <TableCell>\n                                                  <Avatar\n                                                      alt={`${n[0]} ${n[1]}`}\n                                                      src={n[2]}\n                                                      className={imgStyle}\n                                                  />\n                                              </TableCell>\n\n                                              <TableCell\n                                                  component=\"th\"\n                                                  scope=\"row\"\n                                              >\n                                                  {`${n[0]} ${n[1]}`}\n                                              </TableCell>\n                                              <TableCell>{n[5]}</TableCell>\n                                              <TableCell>\n                                                  {\n                                                      <LinearProgress\n                                                          variant=\"determinate\"\n                                                          value={n[4]}\n                                                      />\n                                                  }\n                                                  {`${n[4]} %`}\n                                              </TableCell>\n                                          </TableRow>\n                                      ))\n                                    : ''}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Wrapper>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    error: state.errors,\n    success: state.success,\n    results: state.results,\n    stats: state.statistics,\n});\nexport const cleanUp_ = () => cleanUp();\n\nexport default connect(mapStateToProps, { getResults, cleanUp_, getStats })(\n    Home\n);\n","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Redirect } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { login, cleanUpAuth } from '../../actions/auth';\nimport { cleanUp } from '../../actions/errors';\nimport { Alerts } from '../../components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'visible',\n    },\n    session: {\n        position: 'relative',\n        zIndex: 4000,\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    background: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    content: {\n        padding: `40px ${theme.spacing(1)}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: '1 0 auto',\n        flexDirection: 'column',\n        minHeight: '100%',\n        textAlign: 'center',\n    },\n    wrapper: {\n        flex: 'none',\n        maxWidth: '400px',\n        width: '100%',\n        margin: '0 auto',\n    },\n    fullWidth: {\n        width: '100%',\n    },\n    logo: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    progress: {\n        marginLeft: theme.spacing(1),\n      },\n}));\nlet type;\nlet text;\nconst Signin = (props) => {\n    const [values, setValues] = useState({ email: '', password: '' });\n    const [alert, setAlert] = useState({ state: false });\n    const onChange = (e) => {\n        e.persist();\n        setValues((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n    const { error, success, history } = props;\n    useEffect(() => {\n        console.log('the errors', error);\n        if (error.error) {\n            if (Array.isArray(error.message.message)) {\n                let text_ = 'Issues: ';\n                for (let i = 0; i < error.message.message.length; i += 1) {\n                    text_ +=\n                        ', No. ' + i + ': ' + error.message.message[i].message;\n                }\n                text = text_;\n                type = 'error';\n                console.log('the error text >>>>>', text);\n                setAlert({ state: true });\n\n                setTimeout(() => {\n                    setAlert({ state: false });\n                }, 6000);\n            } else {\n                console.log('the >>>', error.message);\n                setAlert({ state: true });\n                text =\n                    error.message.error ||\n                    error.message ||\n                    error.message.message;\n                type = 'error';\n\n                setTimeout(() => {\n                    setAlert({ state: false });\n                }, 6000);\n            }\n            return () => {\n                props.cleanUp_();\n            };\n        }\n        if (success.status !== null && success.message) {\n            setAlert({ state: true });\n            text = success.message.message;\n            type = 'success';\n\n            setTimeout(() => {\n                history && history.push('/parties/list-party');\n                setAlert({ state: false });\n            }, 2000);\n            // return () => {\n            //     props.cleanUp_();\n            // };\n        }\n    }, [success, error]);\n    const submit = (e) => {\n        e.preventDefault();\n        props.login(values);\n    };\n    const classes = useStyles();\n    if (props.auth.isAuthenticated) {\n        return <Redirect to=\"/\" />;\n    }\n    return (\n        <div className={classNames(classes.session, classes.background)}>\n            <div className={classes.content}>\n                <div className={classes.wrapper}>\n                    {alert.state ? (\n                        <Alerts\n                            text={text}\n                            type={type}\n                            open={true}\n                            position=\"center\"\n                        />\n                    ) : (\n                        ''\n                    )}\n                    <Card>\n                        <CardContent>\n                            <form onSubmit={submit}>\n                                <div\n                                    className={classNames(\n                                        classes.logo,\n                                        `text-xs-center pb-xs`\n                                    )}\n                                >\n                                    <img\n                                        src={`${process.env.PUBLIC_URL}/static/images/logo-dark.svg`}\n                                        alt=\"\"\n                                        className=\"block\"\n                                    />\n                                    <Typography variant=\"caption\">\n                                        <br></br>\n                                        Sign in with your credentials.\n                                    </Typography>\n                                </div>\n                                <TextField\n                                    id=\"username\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    required\n                                    className={classes.textField}\n                                    fullWidth\n                                    onChange={onChange}\n                                    margin=\"normal\"\n                                />\n                                <TextField\n                                    id=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    className={classes.textField}\n                                    type=\"password\"\n                                    fullWidth\n                                    onChange={onChange}\n                                    margin=\"normal\"\n                                    required\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox value=\"checkedA\" />}\n                                    label=\"Stayed logged in\"\n                                    className={classes.fullWidth}\n                                /> */}\n                                <br></br><br></br>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    type=\"submit\"\n                                >\n                                    Login\n                                   {\n                                       props.auth.isLoading ? \n                                       <CircularProgress\n                                        className={classes.progress}\n                                        size={20}\n                                        style={{ color: 'white' }}\n                                    />: ''\n                                   } \n                                </Button>\n                                {/* <div className=\"pt-1 text-md-center\">\n                                    <Link to=\"/forgot\">\n                                        <Button>Forgot password?</Button>\n                                    </Link>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;\n                                    <Link to=\"/signup\">\n                                        <Button>Create new account.</Button>\n                                    </Link>\n                                </div> */}\n                            </form>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    error: state.errors,\n    success: state.success,\n});\n\nexport const cleanUp_ = () => cleanUp();\n\nexport default connect(mapStateToProps, { login, cleanUpAuth, cleanUp_ })(\n    Signin\n);\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { getParties } from '../../actions/parties';\r\nimport { addCandidate, cleanUp } from '../../actions/candidates';\r\nimport { connect } from 'react-redux';\r\nimport { Alerts } from '../../components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    margin_: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n    progress: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n});\r\nlet type;\r\nlet text;\r\nconst Candidate = (props) => {\r\n    const [values, setValues] = useState({});\r\n    const [alert, setAlert] = useState({ state: false });\r\n    console.log('the alert', alert);\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setValues((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n        if (e.target.name === 'display_picture') {\r\n            const [pictureFile] = e.target.files;\r\n            setValues((prevState) => ({ ...prevState, display_picture: pictureFile }));\r\n        }\r\n    };\r\n    const { classes, error, success, history } = props;\r\n    console.log('the props', props);\r\n    let parties = {};\r\n    useEffect(() => {\r\n        if (props.getParties()) props.getParties();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error.error) {\r\n            if (Array.isArray(error.message.message)) {\r\n                let text_ = 'Issues: ';\r\n                console.log('the text_ >>>', text_);\r\n                for (let i = 0; i < error.message.message.length; i += 1) {\r\n                    text_ +=\r\n                        ', No. ' + i + ': ' + error.message.message[i].message;\r\n                }\r\n                text = text_;\r\n                type = 'error';\r\n                console.log('the error text >>>>>', text);\r\n                setAlert({ state: true });\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            } else {\r\n                setAlert({ state: true });\r\n                text =\r\n                    error.message.error ||\r\n                    error.message ||\r\n                    error.message.message;\r\n                type = 'error';\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            }\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n        if (success.status !== null && success.message) {\r\n            setAlert({ state: true });\r\n            text = success.message.message || success.message;\r\n            type = 'success';\r\n\r\n            setTimeout(() => {\r\n                history && history.push('/canditates/list-candidates');\r\n                setAlert({ state: false });\r\n            }, 2000);\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n    }, [success, error]);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        console.log('the values', values);\r\n        props.addCandidate(values);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    {alert.state ? (\r\n                        <Alerts\r\n                            text={text}\r\n                            type={type}\r\n                            open={true}\r\n                            position=\"right\"\r\n                        />\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        Add Candidate\r\n                    </Typography>\r\n                </Toolbar>\r\n                <Alerts />\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <form onSubmit={submit}>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            First Name\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Firstname\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"first_name\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Last Name\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Lastname\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"last_name\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Manifesto\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Manifesto\"\r\n                            name=\"manifesto\"\r\n                            onChange={onChange}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <DescriptionIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"gender\">Gender</InputLabel>\r\n                        <Select\r\n                            id=\"gender\"\r\n                            onChange={onChange}\r\n                            placeholder=\"Select Gender\"\r\n                            name=\"gender\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EventIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"Male\">Male</MenuItem>\r\n                            <MenuItem value=\"Female\">Female</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"party\">Party</InputLabel>\r\n                        <Select\r\n                            id=\"party\"\r\n                            onChange={onChange}\r\n                            placeholder=\"Select Party\"\r\n                            name=\"political_partyId\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <AppsIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        >\r\n                            {props.parties.allParties &&\r\n                            props.parties.allParties.rows ? (\r\n                                props.parties.allParties.rows.map((party) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={party.id}\r\n                                            value={party.id}\r\n                                        >\r\n                                            {party.name}\r\n                                        </MenuItem>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <MenuItem>No Parties</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        {/* <InputLabel>Display Picture</InputLabel> */}\r\n                        <label htmlFor=\"upload-logo\">\r\n                            <Button component=\"span\" className={classes.button}>\r\n                                Select Display Image\r\n                            </Button>\r\n                        </label>\r\n                        <Input\r\n                            id=\"upload-logo\"\r\n                            placeholder=\"Logo\"\r\n                            accept=\"image/*\"\r\n                            type=\"file\"\r\n                            name=\"display_picture\"\r\n                            onChange={onChange}\r\n                            data-max-size=\"2000\"\r\n                            style={{ display: 'none' }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <CropOriginalIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <div className={classes.margin_}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Add Candidate\r\n                            {props.candidate.isLoading ? (\r\n                                <CircularProgress\r\n                                    className={classes.progress}\r\n                                    size={20}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\naddCandidate.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    error: state.errors,\r\n    success: state.success,\r\n    candidate: state.candidates,\r\n    parties: state.parties.parties,\r\n});\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, { addCandidate, getParties, cleanUp_ })(Candidate)\r\n);\r\n","import Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingBottom: theme.spacing(1) * 2,\n    },\n    avatar: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 105,\n        marginBottom: theme.spacing(1) * 2,\n    },\n}));\n\nconst ProfileCard = ({ name, image, location, progress }) => {\n    const classes = useStyles();\n    return (\n        <Card className=\"text-xs-center\">\n            <CardContent className={classNames(classes.content, 'px-0')}>\n                <Grid\n                    container\n                    spacing={0}\n                    alignItems={'center'}\n                    direction={'row'}\n                    justify={'space-around'}\n                >\n                    {/* <Grid item>\n            <IconButton aria-label=\"Send message\">\n              <EmailIcon />\n            </IconButton>\n          </Grid> */}\n                    <Grid item>\n                        <Avatar\n                            alt={name}\n                            src={image}\n                            className={classes.avatar}\n                        />\n                    </Grid>\n                    {/* <Grid item>\n            <IconButton aria-label=\"Call\">\n              <PhoneIcon />\n            </IconButton>\n          </Grid> */}\n                </Grid>\n                <Typography variant=\"h6\" gutterBottom>\n                    {name}\n                </Typography>\n                <Typography variant=\"caption\">{location}</Typography>\n                <LinearProgress variant=\"determinate\" value={progress} />\n            </CardContent>\n            <Divider />\n            <CardContent className={classes.content}>\n                <Grid\n                    container\n                    spacing={0}\n                    alignItems={'center'}\n                    direction={'row'}\n                    justify={'space-between'}\n                ></Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nProfileCard.propTypes = {\n    name: PropTypes.string,\n    image: PropTypes.string,\n    location: PropTypes.string,\n};\n\nexport default ProfileCard;\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    position: 'relative',\n    padding: theme.spacing(1) * 2,\n    '&:last-child': {\n      paddingBottom: theme.spacing(1) * 2\n    }\n  },\n  icon: {\n    boxShadow: 'none',\n    color: 'white'\n  },\n  iconFloat: {\n    position: 'absolute',\n    right: '15px',\n    top: '50%',\n    marginTop: '-20px',\n    opacity: '0.2',\n    transform: 'rotate(-5deg)'\n  },\n  lightText: {\n    color: 'white'\n  }\n}));\n\nconst StatCard = ({ type, title, value, icon, color }) => {\n  const classes = useStyles();\n  let before = null;\n  let after = null;\n\n  const cardIcon = (\n    <Grid item className={type === 'fill' ? classes.iconFloat : null}>\n      <IconButton\n        className={classes.icon}\n        aria-label={title}\n        style={{ backgroundColor: color }}\n      >\n        {icon}\n      </IconButton>\n    </Grid>\n  );\n\n  if (icon) {\n    type === 'fill' ? (after = cardIcon) : (before = cardIcon);\n  }\n\n  return (\n    <Card style={type === 'fill' ? { backgroundColor: color } : null}>\n      <CardContent className={classes.content}>\n        <Grid\n          container\n          alignItems={'center'}\n          direction={'row'}\n          justify={'flex-start'}\n        >\n          {before}\n          <Grid item>\n            <div className={type === 'fill' ? 'pr-1' : 'px-1'}>\n              <Typography\n                variant=\"h6\"\n                className={type === 'fill' ? classes.lightText : null}\n              >\n                {value}\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                className={type === 'fill' ? classes.lightText : null}\n              >\n                {title}\n              </Typography>\n            </div>\n          </Grid>\n          {after}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nStatCard.propTypes = {\n  type: PropTypes.oneOf(['fill']),\n  title: PropTypes.string,\n  value: PropTypes.number,\n  icon: PropTypes.element,\n  color: PropTypes.string\n};\n\nexport default StatCard;\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    GET_RESULTS,\r\n    CLEAN_UP,\r\n    LOADING,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n// GET PARTIES\r\nexport const getResults = () => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING,\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/vote/result', payload: null, method: 'get' });\r\n        dispatch({\r\n            type: GET_RESULTS,\r\n            payload: result,\r\n        });\r\n        dispatch({\r\n            type: CLEAN_UP,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    GET_STATS,\r\n    CLEAN_UP,\r\n    LOADING,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n// GET PARTIES\r\nexport const getStats = () => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING,\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/stats', payload: null, method: 'get' });\r\n        dispatch({\r\n            type: GET_STATS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  session: {\n    position: 'relative',\n    zIndex: 4000,\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    padding: `40px ${theme.spacing(1)}px`,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n    minHeight: '100%',\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: '150px',\n    lineHeight: 1.2,\n    fontWeight: 100,\n    display: 'inline-table',\n    position: 'relative',\n    background: theme.palette.primary.main,\n    color: '#fff',\n    padding: `0 ${theme.spacing(1) * 3}px`,\n    borderRadius: '60px',\n    cursor: 'pointer',\n    margin: `0 0 ${theme.spacing(1)}px`,\n    '&:after': {\n      top: '100%',\n      left: '50%',\n      border: 'solid transparent',\n      content: '\"\"',\n      height: 0,\n      width: 0,\n      position: 'absolute',\n      pointerEvents: 'none',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderTopColor: theme.palette.primary.main,\n      borderWidth: '8px',\n      marginLeft: '-8px'\n    }\n  },\n  subtitle: {\n    fontSize: '32px',\n    fontWeight: 900\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.session}>\n      <div className={classes.content}>\n        <Typography className={classes.title}>404</Typography>\n        <Typography className={classes.subtitle}>Page not found!</Typography>\n        <Typography variant=\"caption\">\n          Sorry, but the page you were trying to view does not exist.{' '}\n          <Link to=\"/\">Report this error?</Link>\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { CLEAN_UP } from './types';\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n\r\n\r\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    GET_PARTIES,\r\n    UPDATE_PARTY,\r\n    DELETE_PARTY,\r\n    GET_SUCCESS,\r\n    CLEAN_UP,\r\n    LOADING,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n// GET PARTIES\r\nexport const getParties = () => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/parties', payload: null, method: 'get' });\r\n        \r\n        dispatch({\r\n            type: GET_PARTIES,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const updateParty = (id, updateData) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/parties/${id}`, payload: updateData, method: 'put', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: UPDATE_PARTY,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const deleteParty = (id) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/parties/${id}`, payload: null, method: 'delete', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: DELETE_PARTY,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const addParty = (party) => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    const partyData = new FormData();\r\n    Object.keys(party).map(async (key) => {\r\n        partyData.append(key, party[key]);\r\n    });\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/parties/add', payload: partyData, method: 'post', contentType:'multipart/form-data' });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n    };\r\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    GET_CANDIDATES,\r\n    UPDATE_CANDITATE,\r\n    DELETE_CANDIDATE,\r\n    GET_SUCCESS,\r\n    CLEAN_UP,\r\n    LOADING,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n// GET PARTIES\r\nexport const getCandidates = () => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/candidates', payload: null, method: 'get' });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_CANDIDATES,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const updateCanditate = (id, updateData) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/candidates/${id}`, payload: updateData, method: 'put', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: UPDATE_CANDITATE,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const deleteCandidate = (id) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/candidates/${id}`, payload: null, method: 'delete', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: DELETE_CANDIDATE,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const addCandidate = (candidate) => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    const candidateData = new FormData();\r\n    Object.keys(candidate).map(async (key) => {\r\n        candidateData.append(key, candidate[key]);\r\n    });\r\n    console.log('the candidate', candidateData)\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/candidates/add', payload: candidateData, method: 'post', contentType:'multipart/form-data' });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n    };\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { addParty, cleanUp } from '../../actions/parties';\r\nimport { connect } from 'react-redux';\r\nimport { Alerts } from '../../components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    margin_: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n    progress: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n});\r\nlet type;\r\nlet text;\r\nconst Party = (props) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        bio: '',\r\n        logo: '',\r\n        established: '',\r\n    });\r\n    const [alert, setAlert] = useState({ state: false });\r\n    console.log('the alert', alert);\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setValues((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n        if (e.target.name === 'logo') {\r\n            const [pictureFile] = e.target.files;\r\n            setValues((prevState) => ({ ...prevState, logo: pictureFile }));\r\n        }\r\n    };\r\n    const { classes, error, success, history } = props;\r\n    console.log('the props', props);\r\n\r\n    useEffect(() => {\r\n        if (error.error) {\r\n            if (Array.isArray(error.message.message)) {\r\n                let text_ = 'Issues: ';\r\n                console.log('the text_ >>>', text_);\r\n                for (let i = 0; i < error.message.message.length; i += 1) {\r\n                    text_ +=\r\n                        ', No. ' + i + ': ' + error.message.message[i].message;\r\n                }\r\n                text = text_;\r\n                type = 'error';\r\n                console.log('the error text >>>>>', text);\r\n                setAlert({ state: true });\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            } else {\r\n                setAlert({ state: true });\r\n                text = error.message.error || error.message || error.message.message;\r\n                type = 'error';\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            }\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n        if (success.status !== null && success.message) {\r\n            setAlert({ state: true });\r\n            text = success.message.message || success.message;\r\n            type = 'success';\r\n\r\n            setTimeout(() => {\r\n                history && history.push('/parties/list-party');\r\n                setAlert({ state: false });\r\n            }, 2000);\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n       \r\n    }, [success, error]);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        console.log('the values', values);\r\n        props.addParty(values);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    {alert.state ? (\r\n                        <Alerts text={text} type={type} open={true} position=\"right\" />\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        Add Party\r\n                    </Typography>\r\n                </Toolbar>\r\n                <Alerts />\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <form onSubmit={submit}>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Enter Political Party Name\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Name\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <AppsIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"name\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Bio\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Bio\"\r\n                            name=\"bio\"\r\n                            onChange={onChange}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <DescriptionIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Year Established\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Year\"\r\n                            name=\"established\"\r\n                            onChange={onChange}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EventIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel>Party Logo</InputLabel>\r\n                        <label htmlFor=\"upload-logo\">\r\n                            <Button component=\"span\" className={classes.button}>\r\n                                Select Party Image\r\n                            </Button>\r\n                        </label>\r\n                        <Input\r\n                            id=\"upload-logo\"\r\n                            placeholder=\"Logo\"\r\n                            accept=\"image/*\"\r\n                            type=\"file\"\r\n                            name=\"logo\"\r\n                            onChange={onChange}\r\n                            data-max-size=\"2000\"\r\n                            style={{ display: 'none' }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <CropOriginalIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div className={classes.margin_}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Add Party\r\n                            {\r\n                                       props.party.isLoading ? \r\n                                       <CircularProgress\r\n                                        className={classes.progress}\r\n                                        size={20}\r\n                                        style={{ color: 'white' }}\r\n                                    />: ''\r\n                                   } \r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\naddParty.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    error: state.errors,\r\n    success: state.success,\r\n    party: state.parties\r\n});\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, { addParty, cleanUp_ })(Party)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getCandidates,\r\n    updateCanditate,\r\n    deleteCandidate,\r\n    addCandidate,\r\n} from '../../actions/candidates';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n});\r\n\r\n\r\nconst Candidates = (props) => {\r\n    const { classes, candidates } = props;\r\n\r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'First Name', field: 'first_name' },\r\n            { title: 'Last Name', field: 'last_name' },\r\n            { title: 'Manifesto', field: 'manifesto' },\r\n            { title: 'Gender', field: 'gender' },\r\n            { title: 'Party', field: 'political_partyId' },\r\n        ],\r\n        data: [],\r\n    });\r\n    useEffect(() => {\r\n        props.getCandidates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (candidates.allCandidates && candidates.allCandidates.rows) {\r\n            setState((prevState) => {\r\n                const data = [\r\n                    ...(candidates.allCandidates && candidates.allCandidates.rows),\r\n                ];\r\n                return { ...prevState, data };\r\n            });\r\n        }\r\n    }, [candidates.allCandidates && candidates.allCandidates.rows]);\r\n\r\n    const updateCanditate = (data) => props.updateCanditate(data.id, data);\r\n    const deleteCandidate = (data) => props.deleteCandidate(data.id);\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        <small>\r\n                            <em>you are here:</em>\r\n                        </small>{' '}\r\n                        Dashboard / Candidates /{' '}\r\n                        <strong>All Candidates</strong>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <MaterialTable\r\n                    options={{\r\n                        exportButton: true,\r\n                    }}\r\n                    title=\"All Candidates\"\r\n                    columns={state.columns}\r\n                    data={state.data}\r\n                    editable={{\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        updateCanditate(newData);\r\n                                        setState((prevState) => {\r\n                                            const data = [...prevState.data];\r\n                                            data[\r\n                                                data.indexOf(oldData)\r\n                                            ] = newData;\r\n                                            return { ...prevState, data };\r\n                                        });\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                deleteCandidate(oldData);\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        data.splice(data.indexOf(oldData), 1);\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nCandidates.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    candidates: state.candidates.candidates,\r\n});\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, {\r\n        getCandidates,\r\n        updateCanditate,\r\n        deleteCandidate,\r\n        addCandidate,\r\n    })(Candidates)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { addVoter, cleanUp } from '../../actions/voters';\r\nimport { connect } from 'react-redux';\r\nimport { Alerts } from '../../components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    margin_: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n    progress: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n});\r\nlet type;\r\nlet text;\r\nconst Voter = (props) => {\r\n    const [values, setValues] = useState({});\r\n    const [alert, setAlert] = useState({ state: false });\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setValues((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n    const { classes, error, success, history } = props;\r\n\r\n    useEffect(() => {\r\n        if (error.error) {\r\n            if (Array.isArray(error.message.message)) {\r\n                let text_ = 'Issues: ';\r\n                console.log('the text_ >>>', text_);\r\n                for (let i = 0; i < error.message.message.length; i += 1) {\r\n                    text_ +=\r\n                        ', No. ' + i + ': ' + error.message.message[i].message;\r\n                }\r\n                text = text_;\r\n                type = 'error';\r\n                console.log('the error text >>>>>', text);\r\n                setAlert({ state: true });\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            } else {\r\n                setAlert({ state: true });\r\n                text =\r\n                    error.message.error ||\r\n                    error.message ||\r\n                    error.message.message;\r\n                type = 'error';\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            }\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n        if (success.status !== null && success.message) {\r\n            setAlert({ state: true });\r\n            text = success.message.message || success.message;\r\n            type = 'success';\r\n\r\n            setTimeout(() => {\r\n                history && history.push('/voters/list-voters');\r\n                setAlert({ state: false });\r\n            }, 2000);\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n    }, [success, error]);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        console.log('the values', values);\r\n        props.addVoter(values);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    {alert.state ? (\r\n                        <Alerts\r\n                            text={text}\r\n                            type={type}\r\n                            open={true}\r\n                            position=\"right\"\r\n                        />\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        Add Voter\r\n                    </Typography>\r\n                </Toolbar>\r\n                <Alerts />\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <form onSubmit={submit}>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Voter ID\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Voter's ID\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"voter_id\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            First Name\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Firstname\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"first_name\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Last Name\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Lastname\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                            name=\"last_name\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                            Occupation\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            placeholder=\"Enter Occupation\"\r\n                            name=\"occupation\"\r\n                            onChange={onChange}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <DescriptionIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <InputLabel htmlFor=\"gender\">Gender</InputLabel>\r\n                        <Select\r\n                            id=\"gender\"\r\n                            onChange={onChange}\r\n                            placeholder=\"Select Gender\"\r\n                            name=\"gender\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EventIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"Male\">Male</MenuItem>\r\n                            <MenuItem value=\"Female\">Female</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Birthday\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            onChange={onChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EventIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div className={classes.margin_}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Add Voter\r\n                            {props.voter.isLoading ? (\r\n                                <CircularProgress\r\n                                    className={classes.progress}\r\n                                    size={20}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\naddVoter.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    error: state.errors,\r\n    success: state.success,\r\n    voter: state.voters,\r\n});\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, { addVoter, cleanUp_ })(Voter)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getParties,\r\n    updateParty,\r\n    deleteParty,\r\n    addParty,\r\n} from '../../actions/parties';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n});\r\n\r\n\r\nconst Parties = (props) => {\r\n    const { classes, parties } = props;\r\n\r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Bio', field: 'bio' },\r\n            { title: 'Established', field: 'established', type: 'numeric' },\r\n        ],\r\n        data: [],\r\n    });\r\n    useEffect(() => {\r\n        props.getParties();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (parties.allParties && parties.allParties.rows) {\r\n            setState((prevState) => {\r\n                const data = [\r\n                    ...(parties.allParties && parties.allParties.rows),\r\n                ];\r\n                return { ...prevState, data };\r\n            });\r\n        }\r\n    }, [parties.allParties && parties.allParties.rows]);\r\n\r\n    const updateParty = (data) => props.updateParty(data.id, data);\r\n    const deleteParty = (data) => props.deleteParty(data.id);\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        <small>\r\n                            <em>you are here:</em>\r\n                        </small>{' '}\r\n                        Dashboard / Political Parties /{' '}\r\n                        <strong>All Parties</strong>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <MaterialTable\r\n                    options={{\r\n                        exportButton: true,\r\n                    }}\r\n                    title=\"All Parties\"\r\n                    columns={state.columns}\r\n                    data={state.data}\r\n                    editable={{\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        updateParty(newData);\r\n                                        setState((prevState) => {\r\n                                            const data = [...prevState.data];\r\n                                            data[\r\n                                                data.indexOf(oldData)\r\n                                            ] = newData;\r\n                                            return { ...prevState, data };\r\n                                        });\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                deleteParty(oldData);\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        data.splice(data.indexOf(oldData), 1);\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nParties.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    parties: state.parties.parties,\r\n});\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, {\r\n        getParties,\r\n        updateParty,\r\n        deleteParty,\r\n        addParty,\r\n    })(Parties)\r\n);\r\n","\r\nimport { axiosCall, setErrors } from '../utils';\r\n\r\nimport {\r\n    GET_VOTERS,\r\n    GET_SUCCESS,\r\n    CLEAN_UP,\r\n    LOADING,\r\n} from './types';\r\n\r\n\r\nexport const cleanUp = () => ({\r\n    type: CLEAN_UP,\r\n});\r\n// GET PARTIES\r\nexport const getVoters = () => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/voters', payload: null, method: 'get' });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_VOTERS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const updateVoter = (id, updateData) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/voters/${id}`, payload: updateData, method: 'put', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const deleteVoter = (id) => async (dispatch) => {\r\n    try {\r\n        const result = await axiosCall({ path: `/api/v1/voters/${id}`, payload: null, method: 'delete', });\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n};\r\n\r\nexport const addVoter = (voter) => async (dispatch) => {\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    // const candidateData = new FormData();\r\n    // Object.keys(candidate).map(async (key) => {\r\n    //     candidateData.append(key, candidate[key]);\r\n    // });\r\n    // console.log('the candidate', candidateData)\r\n    try {\r\n        const result = await axiosCall({ path: '/api/v1/voters/add', payload: voter, method: 'post'});\r\n        console.log('the result', result)\r\n        dispatch({\r\n            type: GET_SUCCESS,\r\n            payload: result,\r\n        });\r\n      } catch (error) {\r\n        dispatch(setErrors(error));\r\n      }\r\n    };\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { Alerts } from '../../components';\r\n\r\nimport {\r\n    getVoters,\r\n    updateVoter,\r\n    deleteVoter,\r\n    addVoter,\r\n    cleanUp,\r\n} from '../../actions/voters';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n});\r\n\r\nlet type;\r\nlet text;\r\nconst Voters = (props) => {\r\n    const { classes, voters, error, success } = props;\r\n    const [alert, setAlert] = useState({ state: false });\r\n    console.log('the props in comp', props);\r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'Voter ID', field: 'voter_id' },\r\n            { title: 'First Name', field: 'first_name' },\r\n            { title: 'Last Name', field: 'last_name' },\r\n            { title: 'Occupation', field: 'occupation' },\r\n            { title: 'Gender', field: 'gender' },\r\n            { title: 'DoB', field: 'dob' },\r\n        ],\r\n        data: [],\r\n    });\r\n    useEffect(() => {\r\n        props.getVoters();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (error.error) {\r\n            if (Array.isArray(error.message.message)) {\r\n                let text_ = 'Issues: ';\r\n                console.log('the text_ >>>', text_);\r\n                for (let i = 0; i < error.message.message.length; i += 1) {\r\n                    text_ +=\r\n                        ', No. ' + i + ': ' + error.message.message[i].message;\r\n                }\r\n                text = text_;\r\n                type = 'error';\r\n                console.log('the error text >>>>>', text);\r\n                setAlert({ state: true });\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            } else {\r\n                setAlert({ state: true });\r\n                text =\r\n                    error.message.error ||\r\n                    error.message ||\r\n                    error.message.message;\r\n                type = 'error';\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 2000);\r\n            }\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n        if (success.status !== null && success.message) {\r\n            setAlert({ state: true });\r\n            text = success.message.message || success.message;\r\n            type = 'success';\r\n            setTimeout(() => {\r\n                setAlert({ state: false });\r\n            }, 2000);\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n    }, [success, error]);\r\n    useEffect(() => {\r\n        if (voters.allVoters && voters.allVoters.rows) {\r\n            setState((prevState) => {\r\n                const data = [...(voters.allVoters && voters.allVoters.rows)];\r\n                return { ...prevState, data };\r\n            });\r\n        }\r\n    }, [voters.allVoters && voters.allVoters.rows]);\r\n\r\n    const updateVoter = (data) => props.updateVoter(data.id, data);\r\n    const deleteVoter = (data) => props.deleteVoter(data.id);\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    {alert.state ? (\r\n                        <Alerts\r\n                            text={text}\r\n                            type={type}\r\n                            open={true}\r\n                            position=\"right\"\r\n                        />\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        <small>\r\n                            <em>you are here:</em>\r\n                        </small>{' '}\r\n                        Dashboard / Voters / <strong>All Voters</strong>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <MaterialTable\r\n                    options={{\r\n                        exportButton: true,\r\n                    }}\r\n                    title=\"All Voters\"\r\n                    columns={state.columns}\r\n                    data={state.data}\r\n                    editable={{\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        updateVoter(newData);\r\n                                        setState((prevState) => {\r\n                                            const data = [...prevState.data];\r\n                                            data[\r\n                                                data.indexOf(oldData)\r\n                                            ] = newData;\r\n                                            return { ...prevState, data };\r\n                                        });\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                deleteVoter(oldData);\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        data.splice(data.indexOf(oldData), 1);\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nVoters.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nconst mapStateToProps = (state) => ({\r\n    voters: state.voters.voters,\r\n    error: state.errors,\r\n    success: state.success,\r\n});\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, {\r\n        getVoters,\r\n        updateVoter,\r\n        deleteVoter,\r\n        addVoter,\r\n        cleanUp_,\r\n    })(Voters)\r\n);\r\n","import { Candidate, Wrapper } from '../../components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React, { useEffect } from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getCandidates, cleanUp } from '../../actions/candidates';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pricingTable: {\r\n        marginTop: '4px',\r\n    },\r\n    centered: {\r\n        margin: '0 auto',\r\n    },\r\n    label: {\r\n        color: '#ffffff',\r\n    },\r\n    font: {\r\n        fontFamily: theme.typography.fontFamily\r\n    }\r\n}));\r\nlet candidatesShow = []\r\nlet voter;\r\nconst Vote = (props) => {\r\n    const { error, success, candidates, vote } =props;\r\n    console.log('the props', props);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        props.getCandidates();\r\n        return () => {\r\n            props.cleanUp_();\r\n        };\r\n    }, []);\r\n    candidatesShow = candidates.allCandidates && candidates.allCandidates.rows\r\n    voter = vote.voter && vote.voter.foundVoter;\r\n    console.log('the voter', voter)\r\n    console.log('the candidates', candidatesShow )\r\n    if(voter == null) return <Redirect to=\"/check-voter\" />;\r\n\r\n    if(vote.vote && vote.vote.vote) {\r\n        return(\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.centered}>\r\n                    <h1 className={classes.font}>Thank you for Voting.</h1>\r\n                </Toolbar>\r\n                <Toolbar></Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.centered}>\r\n                    <h1 className={classes.font}>Kindly Cast Your Vote</h1>\r\n                </Toolbar>\r\n                <Toolbar></Toolbar>\r\n            </AppBar>\r\n\r\n            <Wrapper padding={false}>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    justify=\"center\"\r\n                    className={classes.pricingTable}\r\n                >\r\n                    <Grid item xs={10}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                        >\r\n                            { candidatesShow ? candidatesShow.map((item, index) => (\r\n                                <Grid item xs={12} sm={6} md={3} key={index}>\r\n                                    <Candidate\r\n                                         name={item.first_name +' '+ item.last_name}\r\n                                        image={item.display_picture}\r\n                                        votersId={voter.voter_id}\r\n                                        candidatesId={item.id}\r\n                                    />\r\n                                </Grid>\r\n                            )) : ''}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.errors,\r\n    success: state.success,\r\n    candidates: state.candidates.candidates,\r\n    vote: state.vote\r\n});\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default connect(mapStateToProps, { getCandidates, cleanUp_ })(Vote);\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { checkVoter, cleanUp } from '../../actions/vote';\r\nimport { Alerts } from '../../components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        overflow: 'visible',\r\n    },\r\n    session: {\r\n        position: 'relative',\r\n        zIndex: 4000,\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    background: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    content: {\r\n        padding: `40px ${theme.spacing(1)}px`,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: '1 0 auto',\r\n        flexDirection: 'column',\r\n        minHeight: '100%',\r\n        textAlign: 'center',\r\n    },\r\n    wrapper: {\r\n        flex: 'none',\r\n        maxWidth: '400px',\r\n        width: '100%',\r\n        margin: '0 auto',\r\n    },\r\n    fullWidth: {\r\n        width: '100%',\r\n    },\r\n    logo: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    progress: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\nlet type;\r\nlet text;\r\nconst Voter = (props) => {\r\n    const [values, setValues] = useState({ votersId: '' });\r\n    const [alert, setAlert] = useState({ state: false });\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setValues((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n    const { error, success, history } = props;\r\n    console.log('the voter props', props)\r\n    useEffect(() => {\r\n        console.log('the errors', error);\r\n        if (error.error) {\r\n            if (Array.isArray(error.message.message)) {\r\n                let text_ = 'Issues: ';\r\n                for (let i = 0; i < error.message.message.length; i += 1) {\r\n                    text_ +=\r\n                        ', No. ' + i + ': ' + error.message.message[i].message;\r\n                }\r\n                text = text_;\r\n                type = 'error';\r\n                console.log('the error text >>>>>', text);\r\n                setAlert({ state: true });\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 6000);\r\n            } else {\r\n                console.log('the >>>', error.message);\r\n                setAlert({ state: true });\r\n                text =\r\n                    error.message.error ||\r\n                    error.message ||\r\n                    error.message.message;\r\n                type = 'error';\r\n\r\n                setTimeout(() => {\r\n                    setAlert({ state: false });\r\n                }, 6000);\r\n            }\r\n            return () => {\r\n                props.cleanUp_();\r\n            };\r\n        }\r\n        if (success.status !== null && success.message) {\r\n            setAlert({ state: true });\r\n            text = success.message.message;\r\n            type = 'success';\r\n\r\n            setTimeout(() => {\r\n                history && history.push('/vote');\r\n                setAlert({ state: false });\r\n            }, 2000);\r\n            // return () => {\r\n            //     props.cleanUp_();\r\n            // };\r\n        }\r\n    }, [success, error]);\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        console.log('the values', values)\r\n        props.checkVoter(values);\r\n    };\r\n    const classes = useStyles();\r\n    if (props.vote.voter) {\r\n        return <Redirect to=\"/vote\" />;\r\n    }\r\n    return (\r\n        <div className={classNames(classes.session, classes.background)}>\r\n            <div className={classes.content}>\r\n                <div className={classes.wrapper}>\r\n                    {alert.state ? (\r\n                        <Alerts\r\n                            text={text}\r\n                            type={type}\r\n                            open={true}\r\n                            position=\"center\"\r\n                        />\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form onSubmit={submit}>\r\n                                <div\r\n                                    className={classNames(\r\n                                        classes.logo,\r\n                                        `text-xs-center pb-xs`\r\n                                    )}\r\n                                >\r\n                                    <img\r\n                                        src={`${process.env.PUBLIC_URL}/static/images/logo-dark.svg`}\r\n                                        alt=\"\"\r\n                                        className=\"block\"\r\n                                    />\r\n                                    <Typography variant=\"caption\">\r\n                                        <br></br>\r\n                                        Sign in with your Voter Id.\r\n                                    </Typography>\r\n                                </div>\r\n                                <TextField\r\n                                    id=\"username\"\r\n                                    label=\"Voter ID\"\r\n                                    name=\"votersId\"\r\n                                    required\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    onChange={onChange}\r\n                                    margin=\"normal\"\r\n                                />\r\n                                <br></br>\r\n                                <br></br>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Login to Vote\r\n                                    {/* {props.voter.isLoading ? (\r\n                                        <CircularProgress\r\n                                            className={classes.progress}\r\n                                            size={20}\r\n                                            style={{ color: 'white' }}\r\n                                        />\r\n                                    ) : (\r\n                                        ''\r\n                                    )} */}\r\n                                </Button>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vote: state.vote,\r\n    error: state.errors,\r\n    success: state.success,\r\n});\r\n\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default connect(mapStateToProps, { checkVoter, cleanUp_ })(Voter);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { getResults, cleanUp } from '../../actions/results';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ProfileCard } from '../../components';\r\n\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    margin_: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        clear: 'both',\r\n    },\r\n    appBar: {\r\n        boxShadow: theme.shadows[0],\r\n    },\r\n    progress: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n});\r\nlet candidate = {};\r\nlet name = [];\r\nlet new_ = [];\r\nconst Results = (props) => {\r\n    const { classes, results, success } = props;\r\n    console.log('the props', props);\r\n    useEffect(() => {\r\n        props.getResults();\r\n        return () => {\r\n            props.cleanUp_();\r\n        };\r\n    }, []);\r\n    candidate = {};\r\n    if (results && results.isLoading === false && results.loaded === true) {\r\n        candidate = results && results.results.votes;\r\n        if (candidate) {\r\n            name = [];\r\n            Object.keys(candidate).map((key) => {\r\n                name.push(key + ',' + candidate[key]);\r\n            });\r\n        }\r\n        new_ = [];\r\n        for (let i = 0; i < name.length; i++) {\r\n            new_.push(name[i].split(/[\\s,]+/));\r\n        }\r\n    }\r\n    if (new_) console.log('the new', new_);\r\n    return (\r\n        <Card className={classes.card}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar>\r\n                    <Typography color=\"inherit\" className=\"flexSpacer\">\r\n                        Results - Total Number of Votes (\r\n                        {results && results.results.count})\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <CardContent className={classes.content}>\r\n                <Grid container spacing={1}>\r\n                    {new_\r\n                        ? new_.map((candidateScore) => (\r\n                              <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  sm={6}\r\n                                  md={4}\r\n                                  key={candidateScore[3]}\r\n                              >\r\n                                  <ProfileCard\r\n                                      name={`${candidateScore[0]} ${candidateScore[1]}`}\r\n                                      image={`${candidateScore[2]}`}\r\n                                      location={`${candidateScore[4]}% with ${candidateScore[5]} votes`}\r\n                                      progress={candidateScore[4]}\r\n                                  />\r\n                              </Grid>\r\n                          ))\r\n                        : ''}\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nResults.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    error: state.errors,\r\n    success: state.success,\r\n    results: state.results,\r\n});\r\nexport const cleanUp_ = () => cleanUp();\r\n\r\nexport default withStyles(styles)(\r\n    connect(mapStateToProps, { getResults, cleanUp_ })(Results)\r\n);\r\n","// Pages\nimport {\n    Calendar,\n    Home,\n    Media,\n    Widgets,\n    AddCandidate,\n    AddParty,\n    ListParties,\n    ListCandidates,\n    AddVoter,\n    ListVoters,\n    Results\n} from './pages';\n\nimport AppsIcon from '@material-ui/icons/Apps';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n// Icons\nimport FaceIcon from '@material-ui/icons/Face';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ViewColumnIcon from '@material-ui/icons/ViewColumn';\n\nexport default {\n    items: [\n        {\n            path: '/',\n            name: 'Dashboard',\n            type: 'link',\n            icon: ViewColumnIcon,\n            component: Home,\n        },\n        {\n            path: '/parties',\n            name: 'Political Parties',\n            type: 'submenu',\n            icon: AppsIcon,\n            children: [\n                {\n                    path: '/add-party',\n                    name: 'Add Party',\n                    component: AddParty,\n                },\n                {\n                    path: '/list-party',\n                    name: 'List Parties',\n                    component: ListParties,\n                },\n            ],\n        },\n        {\n            path: '/canditates',\n            name: 'Candidates',\n            type: 'submenu',\n            icon: PersonIcon,\n            children: [\n                {\n                    path: '/add-candidate',\n                    name: 'Add Candidate',\n                    component: AddCandidate,\n                },\n                {\n                    path: '/list-candidates',\n                    name: 'List Candidates',\n                    component: ListCandidates,\n                },\n            ],\n        },\n        {\n            path: '/voters',\n            name: 'Voters',\n            type: 'submenu',\n            icon: FaceIcon,\n            children: [\n                {\n                    path: '/add-voter/',\n                    name: 'Add Voter',\n                    component: AddVoter,\n                },\n                {\n                    path: '/list-voters',\n                    name: 'List Voters',\n                    component: ListVoters,\n                },\n            ],\n        },\n        {\n            path: '/results',\n            name: 'Results',\n            type: 'link',\n            icon: EqualizerIcon,\n            component: Results,\n        },\n        {\n            path: 'https://encrisoft.com',\n            name: 'Powered by Encrisoft',\n            type: 'external',\n            icon: BookmarkIcon,\n        },\n    ],\n};\n","import { Header, Sidebar, Workspace } from \"../components\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport FormatTextdirectionLToRIcon from \"@material-ui/icons/FormatTextdirectionLToR\";\nimport FormatTextdirectionRToLIcon from \"@material-ui/icons/FormatTextdirectionRToL\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { MobileBreakpoint } from \"../styleVariables\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport routes from \"../routes\";\nimport { useAppState } from \"../components/AppProvider/AppProvider\";\nimport useMountEffect from \"../mountEffect\";\n\nconst useStyles = makeStyles(theme => ({\n  panel: {\n    position: \"relative\",\n    overflow: \"hidden\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 64px)\",\n      paddingTop: \"64px\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 56px)\",\n      paddingTop: \"56px\"\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"calc(100vh - 64px)\"\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 1\n  },\n  speedDial: {\n    position: \"absolute\",\n    bottom: theme.spacing(1) * 2,\n    right: theme.spacing(1) * 3\n  }\n}));\n\nconst Dashboard = ({ history }) => {\n  const classes = useStyles();\n  const [state, dispatch] = useAppState();\n  const [opened, setOpened] = useState(true);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [openSpeedDial, setOpenSpeedDial] = useState(false);\n\n  const mediaMatcher = matchMedia(`(max-width: ${MobileBreakpoint}px)`);\n\n  const resizeDispatch = () => {\n    if (typeof Event === \"function\") {\n      window.dispatchEvent(new Event(\"resize\"));\n    } else {\n      const evt = window.document.createEvent(\"UIEvents\");\n      evt.initUIEvent(\"resize\", true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  };\n\n  const handleDrawerToggle = () => {\n    setOpened(!opened);\n    resizeDispatch();\n  };\n\n  const handleNotificationToggle = () =>\n    setNotificationsOpen(!notificationsOpen);\n\n  const handleFullscreenToggle = () => {\n    const element = document.querySelector(\"#root\");\n    const isFullscreen =\n      document.webkitIsFullScreen || document.mozFullScreen || false;\n\n    element.requestFullScreen =\n      element.requestFullScreen ||\n      element.webkitRequestFullScreen ||\n      element.mozRequestFullScreen ||\n      function() {\n        return false;\n      };\n    document.cancelFullScreen =\n      document.cancelFullScreen ||\n      document.webkitCancelFullScreen ||\n      document.mozCancelFullScreen ||\n      function() {\n        return false;\n      };\n    isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n  };\n\n  const handleSpeedDialOpen = () => setOpenSpeedDial(true);\n\n  const handleSpeedDialClose = () => setOpenSpeedDial(false);\n\n  const getRoutes = (\n    <Switch>\n      {routes.items.map((item, index) =>\n        item.type === \"external\" ? (\n          <Route\n            exact\n            path={item.path}\n            component={item.component}\n            name={item.name}\n            key={index}\n          />\n        ) : item.type === \"submenu\" ? (\n          item.children.map(subItem => (\n            <Route\n              exact\n              path={`${item.path}${subItem.path}`}\n              component={subItem.component}\n              name={subItem.name}\n            />\n          ))\n        ) : (\n          <Route\n            exact\n            path={item.path}\n            component={item.component}\n            name={item.name}\n            key={index}\n          />\n        )\n      )}\n      <Redirect to=\"/404\" />\n    </Switch>\n  );\n\n  useMountEffect(() => {\n    if (mediaMatcher.matches) setOpened(false);\n    mediaMatcher.addListener(match => {\n      setTimeout(() => {\n        if (match.matches) setOpened(false);\n        else setOpened(true);\n      }, 300);\n    });\n\n    const unlisten = history.listen(() => {\n      if (mediaMatcher.matches) setOpened(false);\n      document.querySelector(\"#root > div > main\").scrollTop = 0;\n    });\n\n    return () => {\n      unlisten();\n      mediaMatcher.removeListener(match => {\n        setTimeout(() => {\n          if (match.matches) setOpened(false);\n          else setOpened(true);\n        }, 300);\n      });\n    };\n  });\n\n  return (\n    <>\n      <Header\n        logoAltText=\"Primer Admin Template\"\n        logo={`${process.env.PUBLIC_URL}/static/images/logo.svg`}\n        toggleDrawer={handleDrawerToggle}\n        toogleNotifications={handleNotificationToggle}\n        toggleFullscreen={handleFullscreenToggle}\n      />\n      <div className={classNames(classes.panel, \"theme-dark\")}>\n        <Sidebar\n          routes={routes.items}\n          opened={opened}\n          toggleDrawer={handleDrawerToggle}\n        />\n        <Workspace opened={opened}>{getRoutes}</Workspace>\n        {/* <NotificationCenter\n          notificationsOpen={notificationsOpen}\n          toogleNotifications={handleNotificationToggle}\n        /> */}\n      </div>\n\n      <Hidden xsDown>\n        <SpeedDial\n          ariaLabel=\"Settings\"\n          className={classes.speedDial}\n          icon={<SpeedDialIcon icon={<SettingsIcon />} />}\n          onBlur={handleSpeedDialClose}\n          onClose={handleSpeedDialClose}\n          onFocus={handleSpeedDialOpen}\n          onMouseEnter={handleSpeedDialOpen}\n          onMouseLeave={handleSpeedDialClose}\n          open={openSpeedDial}\n        >\n          <SpeedDialAction\n            icon={<WbSunnyIcon />}\n            tooltipTitle=\"Toggle light/dark theme\"\n            onClick={() => dispatch({ type: \"type\" })}\n          />\n          <SpeedDialAction\n            icon={\n              state.direction === \"rtl\" ? (\n                <FormatTextdirectionLToRIcon />\n              ) : (\n                <FormatTextdirectionRToLIcon />\n              )\n            }\n            tooltipTitle=\"Toggle LTR/RTL direction\"\n            onClick={() => dispatch({ type: \"direction\" })}\n          />\n        </SpeedDial>\n      </Hidden>\n    </>\n  );\n};\n\nexport default Dashboard;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    GET_PARTIES,\r\n    UPDATE_PARTY,\r\n    DELETE_PARTY,\r\n    ADD_PARTY,\r\n    LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    parties: [],\r\n    isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PARTIES:\r\n            return {\r\n                ...state,\r\n                parties: action.payload,\r\n            };\r\n        case UPDATE_PARTY:\r\n            return {\r\n                ...state,\r\n                parties: action.payload,\r\n            };\r\n        case DELETE_PARTY:\r\n            return {\r\n                ...state,\r\n                parties: action.payload,\r\n            };\r\n        case ADD_PARTY:\r\n            return {\r\n                ...state,\r\n                parties: action.payload,\r\n                isLoading: false\r\n            };\r\n            case LOADING:\r\n                return {\r\n                    ...state,\r\n                    isLoading: true\r\n                };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n    }\r\n}\r\n","import { GET_ERRORS, CLEAN_UP } from '../actions/types';\r\n\r\nconst initialState = {\r\n    message: {},\r\n    status: null,\r\n    error: false,\r\n\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                error: true\r\n            };\r\n            case CLEAN_UP:\r\n                return {\r\n                    ...initialState,\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_SUCCESS, CLEAN_UP } from '../actions/types';\r\n\r\nconst initialState = {\r\n    message: {},\r\n    status: null,\r\n    success: false,\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_SUCCESS:\r\n            return {\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                success: true,\r\n            };\r\n        case CLEAN_UP:\r\n            return {\r\n                ...initialState,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    CLEAN_UP_AUTH\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: localStorage.getItem('user'),\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.user.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n            return {\r\n                user:action.payload.user,\r\n                token: action.payload.user.token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            };\r\n        case CLEAN_UP_AUTH:\r\n                return {\r\n                    ...state,\r\n                    token: null,\r\n                    isAuthenticated: false,\r\n                    isLoading: false\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_CANDIDATES,\r\n    UPDATE_CANDITATE,\r\n    DELETE_CANDIDATE,\r\n    ADD_CANDIDATE,\r\n    LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    candidates: [],\r\n    isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CANDIDATES:\r\n            return {\r\n                ...state,\r\n                candidates: action.payload,\r\n            };\r\n        case UPDATE_CANDITATE:\r\n            return {\r\n                ...state,\r\n                candidates: action.payload,\r\n            };\r\n        case DELETE_CANDIDATE:\r\n            return {\r\n                ...state,\r\n                candidates: action.payload,\r\n            };\r\n        case ADD_CANDIDATE:\r\n            return {\r\n                ...state,\r\n                candidates: action.payload,\r\n                isLoading: false\r\n            };\r\n            case LOADING:\r\n                return {\r\n                    ...state,\r\n                    isLoading: true\r\n                };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n    }\r\n}\r\n","import {\r\n    GET_VOTERS,\r\n    UPDATE_VOTER,\r\n    DELETE_VOTER,\r\n    ADD_VOTER,\r\n    LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    voters: [],\r\n    isLoading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_VOTERS:\r\n            return {\r\n                ...state,\r\n                voters: action.payload,\r\n            };\r\n        case UPDATE_VOTER:\r\n            return {\r\n                ...state,\r\n                voters: action.payload,\r\n            };\r\n        case DELETE_VOTER:\r\n            return {\r\n                ...state,\r\n                voters: action.payload,\r\n            };\r\n        case ADD_VOTER:\r\n            return {\r\n                ...state,\r\n                voters: action.payload,\r\n                isLoading: false,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n    }\r\n}\r\n","import { GET_RESULTS, CLEAN_UP, LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    results: {},\r\n    isLoading: false,\r\n    loaded: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_RESULTS:\r\n            return {\r\n                ...state,\r\n                results: action.payload,\r\n                isLoading: false,\r\n                loaded: true\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loaded: false\r\n            };\r\n        case CLEAN_UP:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                loaded: false\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                loaded: false\r\n            };\r\n    }\r\n}\r\n","import { CAST_VOTE, LOADING, CHECK_VOTER } from '../actions/types';\r\n\r\nconst initialState = {\r\n    vote: null,\r\n    isLoading: false,\r\n    voter: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CAST_VOTE:\r\n            return {\r\n                ...state,\r\n                vote: action.payload,\r\n                isLoading: false\r\n            };\r\n        case CHECK_VOTER:\r\n            return {\r\n                ...state,\r\n                voter: action.payload,\r\n                isLoading: false\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n    }\r\n}\r\n","import { GET_STATS, CLEAN_UP, LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    stats: {},\r\n    isLoading: false,\r\n    loaded: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_STATS:\r\n            return {\r\n                ...state,\r\n                stats: action.payload,\r\n                isLoading: false,\r\n                loaded: true\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loaded: false\r\n            };\r\n        case CLEAN_UP:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                loaded: false\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                loaded: false\r\n            };\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport parties from './parties';\r\nimport errors from './errors';\r\nimport success from './success';\r\nimport auth from './auth';\r\nimport candidates from './candidates';\r\nimport voters from './voters';\r\nimport results from './results';\r\nimport vote from './vote';\r\nimport statistics from './statistics';\r\n\r\nexport default combineReducers({\r\n    parties,\r\n    errors,\r\n    success,\r\n    auth,\r\n    candidates,\r\n    voters,\r\n    results,\r\n    vote,\r\n    statistics\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({component: Component, auth, ...rest }) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={props => {\r\n                if(auth.isLoading){\r\n                    return <h1>Loading...</h1>\r\n                }else if(!auth.isAuthenticated){\r\n                    return <Redirect to=\"/signin\" />\r\n                }else{\r\n                    return <Component {...props} />\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps)(PrivateRoute);","import {\n    NotFound,\n    Signin,\n    Vote,\n    CheckVoter\n} from './pages';\nimport {\n    BrowserRouter,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\nimport AppProvider from './components/AppProvider/AppProvider';\nimport Dashboard from './containers/Dashboard';\nimport React from 'react';\nimport registerServiceWorker from './registerServiceWorker';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport PrivateRoute from './components/common/PrivateRoute';\nimport { loadUser } from './actions/auth';\n\nstore.dispatch(loadUser())\nrender(\n    <Provider store={store}>\n        <AppProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path=\"/404\" component={NotFound} />\n                    <Route exact path=\"/signin\" component={Signin} />\n                    <Route exact path=\"/vote\" component={Vote} />\n                    <Route exact path=\"/check-voter\" component={CheckVoter} />\n                    <PrivateRoute path=\"/\" component={Dashboard} />\n                </Switch>\n            </BrowserRouter>\n        </AppProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}